# Autogenerated from euler.yaml. Do not edit.

self: super:
let
  beam-core-src = super.eulerBuild.allowedPaths {
    root = ../beam-core;
    paths = [
     ../beam-core/beam-core.cabal
     ../beam-core/Database
     ../beam-core/LICENSE
    ];
  };

  beam-migrate-src = super.eulerBuild.allowedPaths {
    root = ../beam-migrate;
    paths = [
     ../beam-migrate/beam-migrate.cabal
     ../beam-migrate/Database
     ../beam-migrate/tools
     ../beam-migrate/LICENSE
    ];
  };

  beam-migrate-cli-src = super.eulerBuild.allowedPaths {
    root = ../beam-migrate-cli;
    paths = [
     ../beam-migrate-cli/beam-migrate-cli.cabal
     ../beam-migrate-cli/Database
     ../beam-migrate-cli/BeamMigrate.hs
     ../beam-migrate-cli/LICENSE
    ];
  };

  beam-postgres-src = super.eulerBuild.allowedPaths {
    root = ../beam-postgres;
    paths = [
     ../beam-postgres/beam-postgres.cabal
     ../beam-postgres/Database
     ../beam-postgres/test
     ../beam-postgres/LICENSE
    ];
  };

  beam-sqlite-src = super.eulerBuild.allowedPaths {
    root = ../beam-sqlite;
    paths = [
     ../beam-sqlite/beam-sqlite.cabal
     ../beam-sqlite/Database
     ../beam-sqlite/examples
     ../beam-sqlite/LICENSE
    ];
  };

  
in 
super.eulerBuild.mkEulerHaskellOverlay self super
  (hself: hsuper: {
    haskell-src-exts = self.eulerBuild.fastBuildExternal {
      drv = super.haskell.lib.unmarkBroken (hself.callHackageDirect {
        pkg = "haskell-src-exts";
        ver = "1.21.1";
        sha256 = "06b37iis7hfnc770gb3jn12dy3yngqcfdraynbvy3n7s0hlv2hcw";
      } { });
      overrides = {
        enableProfiling = true;
      };
    };
    haskell-src-meta = self.eulerBuild.fastBuildExternal {
      drv = super.haskell.lib.unmarkBroken (hsuper.haskell-src-meta);
      overrides = {
        enableProfiling = true;
      };
    };
    beam-core = self.eulerBuild.fastBuild {
      drv = super.haskell.lib.unmarkBroken (hself.callCabal2nix "beam-core" beam-core-src { });
    };
    beam-migrate = self.eulerBuild.fastBuild {
      drv = super.haskell.lib.unmarkBroken (hself.callCabal2nix "beam-migrate" beam-migrate-src { });
    };
    beam-migrate-cli = self.eulerBuild.fastBuild {
      drv = super.haskell.lib.unmarkBroken (hself.callCabal2nix "beam-migrate-cli" beam-migrate-cli-src { });
    };
    beam-postgres = self.eulerBuild.fastBuild {
      drv = super.haskell.lib.unmarkBroken (hself.callCabal2nix "beam-postgres" beam-postgres-src { });
    };
    beam-sqlite = self.eulerBuild.fastBuild {
      drv = super.haskell.lib.unmarkBroken (hself.callCabal2nix "beam-sqlite" beam-sqlite-src { });
    };
  })
